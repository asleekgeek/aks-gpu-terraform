apiVersion: batch/v1
kind: Job
metadata:
  name: gpu-test
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: gpu-test
    spec:
      restartPolicy: Never
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      nodeSelector:
        accelerator: nvidia
      containers:
        - name: gpu-test
          image: nvidia/cuda:12.2-runtime-ubuntu20.04
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "=== GPU Test Starting ==="
              echo "Node: $NODE_NAME"
              echo "Pod: $POD_NAME"
              echo "Namespace: $POD_NAMESPACE"
              echo ""
              
              echo "=== NVIDIA Driver Info ==="
              nvidia-smi
              echo ""
              
              echo "=== CUDA Device Info ==="
              nvidia-smi -L
              echo ""
              
              echo "=== GPU Memory Info ==="
              nvidia-smi --query-gpu=name,memory.total,memory.free,memory.used --format=csv
              echo ""
              
              echo "=== Running CUDA Sample (vectorAdd) ==="
              # Download and compile a simple CUDA program
              apt-get update && apt-get install -y wget build-essential
              wget -q https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/0_Introduction/vectorAdd/vectorAdd.cu
              nvcc -o vectorAdd vectorAdd.cu
              ./vectorAdd
              echo ""
              
              echo "=== GPU Utilization Test ==="
              # Run a simple GPU stress test for 30 seconds
              nvidia-smi dmon -s u -c 6 &
              python3 -c "
              import time
              import subprocess
              
              # Simple GPU workload using cuBLAS
              try:
                  import cupy as cp
                  print('Running CuPy matrix multiplication...')
                  a = cp.random.random((1000, 1000), dtype=cp.float32)
                  b = cp.random.random((1000, 1000), dtype=cp.float32)
                  for i in range(100):
                      c = cp.dot(a, b)
                      if i % 20 == 0:
                          print(f'Iteration {i}')
                      time.sleep(0.1)
                  print('CuPy test completed successfully!')
              except ImportError:
                  print('CuPy not available, running nvidia-smi stress test...')
                  # Alternative simple stress test
                  for i in range(30):
                      subprocess.run(['nvidia-smi', '-q'], capture_output=True)
                      time.sleep(1)
                  print('Basic stress test completed!')
              "
              
              echo "=== Test Completed Successfully ==="
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              nvidia.com/gpu: 1
            limits:
              nvidia.com/gpu: 1
              memory: "1Gi"
              cpu: "500m"